{"version":3,"file":"y-memory.node.js","sources":["src/RedBlackTree.js","src/y-memory.js"],"sourcesContent":["\n/*\n  This file contains a not so fancy implemantion of a Red Black Tree.\n*/\nexport default function extendRBTree (Y) {\n  class N {\n    // A created node is always red!\n    constructor (val) {\n      this.val = val\n      this.color = true\n      this._left = null\n      this._right = null\n      this._parent = null\n      if (val.id === null) {\n        throw new Error('You must define id!')\n      }\n    }\n    isRed () { return this.color }\n    isBlack () { return !this.color }\n    redden () { this.color = true; return this }\n    blacken () { this.color = false; return this }\n    get grandparent () {\n      return this.parent.parent\n    }\n    get parent () {\n      return this._parent\n    }\n    get sibling () {\n      return (this === this.parent.left)\n        ? this.parent.right : this.parent.left\n    }\n    get left () {\n      return this._left\n    }\n    get right () {\n      return this._right\n    }\n    set left (n) {\n      if (n !== null) {\n        n._parent = this\n      }\n      this._left = n\n    }\n    set right (n) {\n      if (n !== null) {\n        n._parent = this\n      }\n      this._right = n\n    }\n    rotateLeft (tree) {\n      var parent = this.parent\n      var newParent = this.right\n      var newRight = this.right.left\n      newParent.left = this\n      this.right = newRight\n      if (parent === null) {\n        tree.root = newParent\n        newParent._parent = null\n      } else if (parent.left === this) {\n        parent.left = newParent\n      } else if (parent.right === this) {\n        parent.right = newParent\n      } else {\n        throw new Error('The elements are wrongly connected!')\n      }\n    }\n    next () {\n      if (this.right !== null) {\n        // search the most left node in the right tree\n        var o = this.right\n        while (o.left !== null) {\n          o = o.left\n        }\n        return o\n      } else {\n        var p = this\n        while (p.parent !== null && p !== p.parent.left) {\n          p = p.parent\n        }\n        return p.parent\n      }\n    }\n    prev () {\n      if (this.left !== null) {\n        // search the most right node in the left tree\n        var o = this.left\n        while (o.right !== null) {\n          o = o.right\n        }\n        return o\n      } else {\n        var p = this\n        while (p.parent !== null && p !== p.parent.right) {\n          p = p.parent\n        }\n        return p.parent\n      }\n    }\n    rotateRight (tree) {\n      var parent = this.parent\n      var newParent = this.left\n      var newLeft = this.left.right\n      newParent.right = this\n      this.left = newLeft\n      if (parent === null) {\n        tree.root = newParent\n        newParent._parent = null\n      } else if (parent.left === this) {\n        parent.left = newParent\n      } else if (parent.right === this) {\n        parent.right = newParent\n      } else {\n        throw new Error('The elements are wrongly connected!')\n      }\n    }\n    getUncle () {\n      // we can assume that grandparent exists when this is called!\n      if (this.parent === this.parent.parent.left) {\n        return this.parent.parent.right\n      } else {\n        return this.parent.parent.left\n      }\n    }\n  }\n\n  class RBTree {\n    constructor () {\n      this.root = null\n      this.length = 0\n    }\n    * findNext (id) {\n      return yield * this.findWithLowerBound([id[0], id[1] + 1])\n    }\n    * findPrev (id) {\n      return yield * this.findWithUpperBound([id[0], id[1] - 1])\n    }\n    findNodeWithLowerBound (from) {\n      if (from === void 0) {\n        throw new Error('You must define from!')\n      }\n      var o = this.root\n      if (o === null) {\n        return null\n      } else {\n        while (true) {\n          if ((from === null || Y.utils.smaller(from, o.val.id)) && o.left !== null) {\n            // o is included in the bound\n            // try to find an element that is closer to the bound\n            o = o.left\n          } else if (from !== null && Y.utils.smaller(o.val.id, from)) {\n            // o is not within the bound, maybe one of the right elements is..\n            if (o.right !== null) {\n              o = o.right\n            } else {\n              // there is no right element. Search for the next bigger element,\n              // this should be within the bounds\n              return o.next()\n            }\n          } else {\n            return o\n          }\n        }\n      }\n    }\n    findNodeWithUpperBound (to) {\n      if (to === void 0) {\n        throw new Error('You must define from!')\n      }\n      var o = this.root\n      if (o === null) {\n        return null\n      } else {\n        while (true) {\n          if ((to === null || Y.utils.smaller(o.val.id, to)) && o.right !== null) {\n            // o is included in the bound\n            // try to find an element that is closer to the bound\n            o = o.right\n          } else if (to !== null && Y.utils.smaller(to, o.val.id)) {\n            // o is not within the bound, maybe one of the left elements is..\n            if (o.left !== null) {\n              o = o.left\n            } else {\n              // there is no left element. Search for the prev smaller element,\n              // this should be within the bounds\n              return o.prev()\n            }\n          } else {\n            return o\n          }\n        }\n      }\n    }\n    findSmallestNode () {\n      var o = this.root\n      while (o != null && o.left != null) {\n        o = o.left\n      }\n      return o\n    }\n    * findWithLowerBound (from) {\n      var n = this.findNodeWithLowerBound(from)\n      return n == null ? null : n.val\n    }\n    * findWithUpperBound (to) {\n      var n = this.findNodeWithUpperBound(to)\n      return n == null ? null : n.val\n    }\n    * iterate (t, from, to, f) {\n      var o\n      if (from === null) {\n        o = this.findSmallestNode()\n      } else {\n        o = this.findNodeWithLowerBound(from)\n      }\n      while (\n        o !== null &&\n        (\n          to === null || // eslint-disable-line no-unmodified-loop-condition\n          Y.utils.smaller(o.val.id, to) ||\n          Y.utils.compareIds(o.val.id, to)\n        )\n      ) {\n        yield * f.call(t, o.val)\n        o = o.next()\n      }\n      return true\n    }\n    * logTable (from, to, filter) {\n      if (filter == null) {\n        filter = function () {\n          return true\n        }\n      }\n      if (from == null) { from = null }\n      if (to == null) { to = null }\n      var os = []\n      yield * this.iterate(this, from, to, function * (o) {\n        if (filter(o)) {\n          var o_ = {}\n          for (var key in o) {\n            if (typeof o[key] === 'object') {\n              o_[key] = JSON.stringify(o[key])\n            } else {\n              o_[key] = o[key]\n            }\n          }\n          os.push(o_)\n        }\n      })\n      if (console.table != null) {\n        console.table(os)\n      }\n    }\n    * find (id) {\n      var n\n      return (n = this.findNode(id)) ? n.val : null\n    }\n    findNode (id) {\n      if (id == null || id.constructor !== Array) {\n        throw new Error('Expect id to be an array!')\n      }\n      var o = this.root\n      if (o === null) {\n        return false\n      } else {\n        while (true) {\n          if (o === null) {\n            return false\n          }\n          if (Y.utils.smaller(id, o.val.id)) {\n            o = o.left\n          } else if (Y.utils.smaller(o.val.id, id)) {\n            o = o.right\n          } else {\n            return o\n          }\n        }\n      }\n    }\n    * delete (id) {\n      if (id == null || id.constructor !== Array) {\n        throw new Error('id is expected to be an Array!')\n      }\n      var d = this.findNode(id)\n      if (d == null) {\n        // throw new Error('Element does not exist!')\n        return\n      }\n      this.length--\n      if (d.left !== null && d.right !== null) {\n        // switch d with the greates element in the left subtree.\n        // o should have at most one child.\n        var o = d.left\n        // find\n        while (o.right !== null) {\n          o = o.right\n        }\n        // switch\n        d.val = o.val\n        d = o\n      }\n      // d has at most one child\n      // let n be the node that replaces d\n      var isFakeChild\n      var child = d.left || d.right\n      if (child === null) {\n        isFakeChild = true\n        child = new N({id: 0})\n        child.blacken()\n        d.right = child\n      } else {\n        isFakeChild = false\n      }\n\n      if (d.parent === null) {\n        if (!isFakeChild) {\n          this.root = child\n          child.blacken()\n          child._parent = null\n        } else {\n          this.root = null\n        }\n        return\n      } else if (d.parent.left === d) {\n        d.parent.left = child\n      } else if (d.parent.right === d) {\n        d.parent.right = child\n      } else {\n        throw new Error('Impossible!')\n      }\n      if (d.isBlack()) {\n        if (child.isRed()) {\n          child.blacken()\n        } else {\n          this._fixDelete(child)\n        }\n      }\n      this.root.blacken()\n      if (isFakeChild) {\n        if (child.parent.left === child) {\n          child.parent.left = null\n        } else if (child.parent.right === child) {\n          child.parent.right = null\n        } else {\n          throw new Error('Impossible #3')\n        }\n      }\n    }\n    _fixDelete (n) {\n      function isBlack (node) {\n        return node !== null ? node.isBlack() : true\n      }\n      function isRed (node) {\n        return node !== null ? node.isRed() : false\n      }\n      if (n.parent === null) {\n        // this can only be called after the first iteration of fixDelete.\n        return\n      }\n      // d was already replaced by the child\n      // d is not the root\n      // d and child are black\n      var sibling = n.sibling\n      if (isRed(sibling)) {\n        // make sibling the grandfather\n        n.parent.redden()\n        sibling.blacken()\n        if (n === n.parent.left) {\n          n.parent.rotateLeft(this)\n        } else if (n === n.parent.right) {\n          n.parent.rotateRight(this)\n        } else {\n          throw new Error('Impossible #2')\n        }\n        sibling = n.sibling\n      }\n      // parent, sibling, and children of n are black\n      if (n.parent.isBlack() &&\n        sibling.isBlack() &&\n        isBlack(sibling.left) &&\n        isBlack(sibling.right)\n      ) {\n        sibling.redden()\n        this._fixDelete(n.parent)\n      } else if (n.parent.isRed() &&\n        sibling.isBlack() &&\n        isBlack(sibling.left) &&\n        isBlack(sibling.right)\n      ) {\n        sibling.redden()\n        n.parent.blacken()\n      } else {\n        if (n === n.parent.left &&\n          sibling.isBlack() &&\n          isRed(sibling.left) &&\n          isBlack(sibling.right)\n        ) {\n          sibling.redden()\n          sibling.left.blacken()\n          sibling.rotateRight(this)\n          sibling = n.sibling\n        } else if (n === n.parent.right &&\n          sibling.isBlack() &&\n          isRed(sibling.right) &&\n          isBlack(sibling.left)\n        ) {\n          sibling.redden()\n          sibling.right.blacken()\n          sibling.rotateLeft(this)\n          sibling = n.sibling\n        }\n        sibling.color = n.parent.color\n        n.parent.blacken()\n        if (n === n.parent.left) {\n          sibling.right.blacken()\n          n.parent.rotateLeft(this)\n        } else {\n          sibling.left.blacken()\n          n.parent.rotateRight(this)\n        }\n      }\n    }\n    * put (v) {\n      if (v == null || v.id == null || v.id.constructor !== Array) {\n        throw new Error('v is expected to have an id property which is an Array!')\n      }\n      var node = new N(v)\n      if (this.root !== null) {\n        var p = this.root // p abbrev. parent\n        while (true) {\n          if (Y.utils.smaller(node.val.id, p.val.id)) {\n            if (p.left === null) {\n              p.left = node\n              break\n            } else {\n              p = p.left\n            }\n          } else if (Y.utils.smaller(p.val.id, node.val.id)) {\n            if (p.right === null) {\n              p.right = node\n              break\n            } else {\n              p = p.right\n            }\n          } else {\n            p.val = node.val\n            return p\n          }\n        }\n        this._fixInsert(node)\n      } else {\n        this.root = node\n      }\n      this.length++\n      this.root.blacken()\n      return node\n    }\n    _fixInsert (n) {\n      if (n.parent === null) {\n        n.blacken()\n        return\n      } else if (n.parent.isBlack()) {\n        return\n      }\n      var uncle = n.getUncle()\n      if (uncle !== null && uncle.isRed()) {\n        // Note: parent: red, uncle: red\n        n.parent.blacken()\n        uncle.blacken()\n        n.grandparent.redden()\n        this._fixInsert(n.grandparent)\n      } else {\n        // Note: parent: red, uncle: black or null\n        // Now we transform the tree in such a way that\n        // either of these holds:\n        //   1) grandparent.left.isRed\n        //     and grandparent.left.left.isRed\n        //   2) grandparent.right.isRed\n        //     and grandparent.right.right.isRed\n        if (n === n.parent.right && n.parent === n.grandparent.left) {\n          n.parent.rotateLeft(this)\n          // Since we rotated and want to use the previous\n          // cases, we need to set n in such a way that\n          // n.parent.isRed again\n          n = n.left\n        } else if (n === n.parent.left && n.parent === n.grandparent.right) {\n          n.parent.rotateRight(this)\n          // see above\n          n = n.right\n        }\n        // Case 1) or 2) hold from here on.\n        // Now traverse grandparent, make parent a black node\n        // on the highest level which holds two red nodes.\n        n.parent.blacken()\n        n.grandparent.redden()\n        if (n === n.parent.left) {\n          // Case 1\n          n.grandparent.rotateRight(this)\n        } else {\n          // Case 2\n          n.grandparent.rotateLeft(this)\n        }\n      }\n    }\n    * flush () {}\n  }\n\n  Y.utils.RBTree = RBTree\n}\n","\nimport extendRBTree from './RedBlackTree'\n\nexport default function extend (Y) {\n  extendRBTree(Y)\n\n  class Transaction extends Y.Transaction {\n    constructor (store) {\n      super(store)\n      this.store = store\n      this.ss = store.ss\n      this.os = store.os\n      this.ds = store.ds\n    }\n  }\n  var Store = Y.utils.RBTree\n  var BufferedStore = Y.utils.createSmallLookupBuffer(Store)\n\n  class Database extends Y.AbstractDatabase {\n    constructor (y, opts) {\n      super(y, opts)\n      this.os = new BufferedStore()\n      this.ds = new Store()\n      this.ss = new BufferedStore()\n    }\n    logTable () {\n      var self = this\n      self.requestTransaction(function * () {\n        console.log('User: ', this.store.y.connector.userId, \"==============================\") // eslint-disable-line\n        console.log(\"State Set (SS):\", yield * this.getStateSet()) // eslint-disable-line\n        console.log(\"Operation Store (OS):\") // eslint-disable-line\n        yield * this.os.logTable() // eslint-disable-line\n        console.log(\"Deletion Store (DS):\") //eslint-disable-line\n        yield * this.ds.logTable() // eslint-disable-line\n        if (this.store.gc1.length > 0 || this.store.gc2.length > 0) {\n          console.warn('GC1|2 not empty!', this.store.gc1, this.store.gc2)\n        }\n        if (JSON.stringify(this.store.listenersById) !== '{}') {\n          console.warn('listenersById not empty!')\n        }\n        if (JSON.stringify(this.store.listenersByIdExecuteNow) !== '[]') {\n          console.warn('listenersByIdExecuteNow not empty!')\n        }\n        if (this.store.transactionInProgress) {\n          console.warn('Transaction still in progress!')\n        }\n      }, true)\n    }\n    transact (makeGen) {\n      var t = new Transaction(this)\n      try {\n        while (makeGen !== null) {\n          var gen = makeGen.call(t)\n          var res = gen.next()\n          while (!res.done) {\n            res = gen.next(res.value)\n          }\n          makeGen = this.getNextRequest()\n        }\n      } catch (e) {\n        if (this.y.emit != null) {\n          this.y.emit('error', e)\n        }\n        throw e\n      }\n    }\n    * destroy () {\n      yield * super.destroy()\n      delete this.os\n      delete this.ss\n      delete this.ds\n    }\n  }\n  Y.extend('memory', Database)\n}\n\nif (typeof Y !== 'undefined') {\n  extend(Y) // eslint-disable-line\n}\n"],"names":[],"mappings":"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"}